# System-wide .bashrc file for interactive bash(1) shells.

# To enable the settings / commands in this file for login shells as well,
# this file has to be sourced in /etc/profile.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

<% if @vo_env == 'dev' -%>
# Set the development-style green prompt
PS1='${debian_chroot:+($debian_chroot)}\[\033[32m\]\u@$(hostname -f|sed 's/\.victorops\.net//'):\w\[\033[00m\]\$ '
<% end -%>
<% if @vo_env == 'stg' -%>
# Set the staging-style cyan prompt
PS1='${debian_chroot:+($debian_chroot)}\[\033[36m\]\u@$(hostname -f|sed 's/\.victorops\.net//'):\w\[\033[00m\]\$ '
<% end -%>
<% if @vo_env == 'lab' -%>
# Set the lab-style inverse blue prompt
PS1='${debian_chroot:+($debian_chroot)}\[\033[44m\]\u@$(hostname -f|sed 's/\.victorops\.net//'):\w\[\033[00m\]\$ '
<% end -%>

# enable bash completion in interactive shells
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# if the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found ]; then
	function command_not_found_handle {
	        # check because c-n-f could've been removed in the meantime
                if [ -x /usr/lib/command-not-found ]; then
		   /usr/bin/python /usr/lib/command-not-found -- $1
                   return $?
                elif [ -x /usr/share/command-not-found ]; then
		   /usr/bin/python /usr/share/command-not-found -- $1
                   return $?
		else
		   return 127
		fi
	}
fi
